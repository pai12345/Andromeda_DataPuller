name: Automation Workflow
on:
  # push:
  #   branches:
  #     - feature/**
  pull_request:
    branches:
      - develop
env:
  CUST_REPOSITORY_ENV: ${{ github.repository }}
  CUST_BRANCH_ENV: ${{ github.ref }}

jobs:
  BUILD:
    name: BUILD
    runs-on: ubuntu-20.04
    steps:
      - name: clone repo
        uses: actions/checkout@v2.3.5
        with:
          repository: ${{ env.CUST_REPOSITORY_ENV }}
          ref: ${{ env.CUST_BRANCH_ENV }}
          fetch-depth: 1
      # - name: lint commits
      #   uses: wagoid/commitlint-github-action@v4
      #   with:
      #     configFile: "./commitlint.config.js"
      #     firstParent: true
      #     failOnWarnings: true
      - name: setup node
        uses: actions/setup-node@v2.4.1
        with:
          node-version: "16"
          cache: "npm"
      - name: cache dependencies
        uses: actions/cache@v2.1.6
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: install npm dependencies
        run: npm install
        shell: bash
      # - name: lint git branch
      #   run: npx branch-name-lint options.json
      #   shell: bash
      - name: lint source code
        run: npm run lint
        shell: bash
      - name: lint docker code
        run: npx dockerfilelint Dockerfile
        shell: bash
      - name: check app build
        run: npm run build-prod
        shell: bash
  STAGING:
    name: STAGING
    runs-on: ubuntu-20.04
    # needs: BUILD
    steps:
      - name: clone repo
        uses: actions/checkout@v2.3.5
        with:
          repository: ${{ env.CUST_REPOSITORY_ENV }}
          ref: ${{ env.CUST_BRANCH_ENV }}
          fetch-depth: 1
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SYNK_KEY }}
          
  # DEPLOY:
  #   name: DEPLOY
  #   runs-on: ubuntu-20.04
  #   needs: STAGING
  #   steps:
  #     - name: Login Container Registry
  #       uses: docker/login-action@v1.10.0
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Clone Repo
  #       uses: actions/checkout@v2.3.5
  #       with:
  #         repository: ${{ env.CUST_REPOSITORY_ENV }}
  #         ref: ${{ env.CUST_BRANCH_ENV }}
  #         fetch-depth: 1
  #     - name: Cache Dependencies
  #       uses: actions/cache@v2.1.6
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-
  #     - name: Extract Metdata
  #       id: meta
  #       uses: docker/metadata-action@v3.6.0
  #       with:
  #         images: dockerdemopai/andromeda
  #         tags: |
  #           type=semver,pattern={{version}},value=0.0.1
  #         flavor: |
  #           latest=false
  #     - name: Build and Push Image
  #       id: docker_build
  #       uses: docker/build-push-action@v2.7.0
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}